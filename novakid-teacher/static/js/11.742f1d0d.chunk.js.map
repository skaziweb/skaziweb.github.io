{"version":3,"sources":["components/TopLoading/index.tsx","utils/validation.ts","pages/Signin/styles.module.scss","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","pages/Signin/index.tsx"],"names":["TopLoading","loading","ref","useRef","useEffect","current","continuousStart","complete","color","memo","ValidatorNames","required","minLength","email","phoneNumber","emailOrPhoneNumber","equals","validators","rule","value","message","length","defaultMessage","isEmail","isMobilePhone","compareTo","validate","rules","validator","type","Error","module","exports","Button","React","props","children","classes","className","_props$color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","_props$variant","variant","other","_objectWithoutProperties","clsx","concat","capitalize","ButtonBase","_extends","root","colorInherit","focusRipple","focusVisible","label","withStyles","theme","typography","button","boxSizing","minWidth","padding","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","short","textDecoration","backgroundColor","fade","action","hoverOpacity","width","display","alignItems","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","name","SIZE","CircularProgress","_props$disableShrink","disableShrink","style","_props$thickness","thickness","_props$value","circleStyle","rootStyle","rootProps","circumference","Math","PI","strokeDasharray","toFixed","round","strokeDashoffset","transform","determinate","indeterminate","static","height","role","svg","viewBox","circle","circleDisableShrink","circleDeterminate","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","animation","colorPrimary","colorSecondary","stroke","transformOrigin","flip","classnames","bind","styles","LoginPage","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useSelector","state","auth","isPending","error","fields","username","password","useState","validationMessage","formData","setFormData","validation","formIsValid","setFormIsValid","submitBtnClicked","setSubmitBtnClicked","valid","index","detail","key","showPassword","setShowPassword","onFormDataChange","fieldName","event","target","getFieldProps","fieldProps","onChange","hasError","helperText","usernameProps","passwordProps","Helmet","onSubmit","preventDefault","newFormData","validRes","loginRequest","form","noValidate","autoComplete","TextField","InputProps","endAdornment","InputAdornment","position","IconButton","onClick"],"mappings":"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","file":"static/js/11.742f1d0d.chunk.js","sourcesContent":["import React, {\n  useRef,\n  useEffect,\n  FC,\n  memo,\n} from 'react';\nimport LoadingBar from 'react-top-loading-bar';\n\ninterface LoadingBarProps {\n  continuousStart: () => void;\n  complete: () => void;\n}\n\ninterface PropsType {\n  loading: boolean;\n}\n\nconst TopLoading: FC<PropsType> = ({ loading }) => {\n  const ref = useRef<HTMLDivElement & LoadingBarProps | null>(null);\n\n  const handleContinuousStart = () => {\n    if (ref.current) ref.current.continuousStart();\n  };\n\n  const handleComplete = () => {\n    if (ref.current) ref.current.complete();\n  };\n\n  useEffect(() => {\n    if (loading) {\n      handleContinuousStart();\n    } else {\n      handleComplete();\n    }\n  }, [loading]);\n\n  return <LoadingBar color=\"#f6bb3d\" ref={ref} />;\n};\n\nexport default memo(TopLoading);\n","import {\n  ValidatorType,\n  ValidationRuleType,\n} from 'types/common';\n\nimport isEmail from 'validator/es/lib/isEmail';\nimport isMobilePhone from 'validator/es/lib/isMobilePhone';\nimport equals from 'validator/es/lib/equals';\n\nexport const ValidatorNames = {\n  required: 'required',\n  minLength: 'minLength',\n  email: 'email',\n  phoneNumber: 'phoneNumber',\n  emailOrPhoneNumber: 'emailOrPhoneNumber',\n  equals: 'equals',\n};\n\nconst validators: { [key: string]: ValidatorType } = {\n  [ValidatorNames.required]: (rule, value) => {\n    const defaultMessage = 'The field can be empty';\n\n    if (value) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n  [ValidatorNames.minLength]: (rule, value) => {\n    if (!rule.length) {\n      return null;\n    }\n\n    const defaultMessage = `Min amount of symbols: ${rule.length}`;\n\n    if (value.length >= rule.length) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n  [ValidatorNames.email]: (rule, value) => {\n    const defaultMessage = 'Incorrect e-mail';\n\n    if (isEmail(value)) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n  [ValidatorNames.phoneNumber]: (rule, value) => {\n    const defaultMessage = 'Incorrect phone number';\n\n    if (isMobilePhone(value)) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n  [ValidatorNames.emailOrPhoneNumber]: (rule, value) => {\n    const defaultMessage = 'Enter correct phone number or email';\n\n    if (isMobilePhone(value) || isEmail(value)) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n  [ValidatorNames.emailOrPhoneNumber]: (rule, value) => {\n    const defaultMessage = 'Enter correct phone number or email';\n\n    if (isMobilePhone(value) || isEmail(value)) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n  [ValidatorNames.equals]: (rule, value) => {\n    const defaultMessage = 'The fiedls do not match';\n\n    if (rule.compareTo && equals(value, rule.compareTo)) {\n      return null;\n    }\n\n    return rule.message ? rule.message : defaultMessage;\n  },\n};\n\nexport default function validate(\n  rules: ValidationRuleType[],\n  value: string,\n): null | string {\n  for (const rule of rules) {\n    const validator = validators[rule.type];\n\n    if (!validator) {\n      throw Error(`validator '${rule.type}' is not existed`);\n    }\n\n    const message = validator(rule, value);\n\n    if (message) {\n      return message;\n    }\n  }\n\n  return null;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Signin_loginPage_FQoBF\",\"logo\":\"Signin_logo_35YVu\"};","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `variant=\"determinate\"`. */\n    determinate: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"determinate\"`. */\n    circleDeterminate: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'determinate': classes.determinate,\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'determinate': classes.circleDeterminate,\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['determinate', 'indeterminate', 'static']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'static') {\n      throw new Error('Material-UI: `variant=\"static\"` was deprecated. Use `variant=\"determinate\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import React, {\n  useState,\n  useEffect,\n  SyntheticEvent,\n  ChangeEvent,\n  FC,\n} from 'react';\n\nimport classnames from 'classnames/bind';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useSnackbar } from 'notistack';\n\nimport TopLoading from 'components/TopLoading';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport { FaEyeSlash, FaEye } from 'react-icons/fa';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { loginRequest } from 'store/auth/actions';\n\nimport validate, { ValidatorNames } from 'utils/validation';\nimport { FormStateType, FormFieldType, ValidationRuleType } from 'types/common';\nimport { ReactComponent as Logo } from 'assets/logo.svg';\nimport { AppStateType } from 'types';\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\nconst LoginPage: FC = () => {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const {\n    isPending,\n    error,\n  } = useSelector((state: AppStateType) => state.auth);\n\n  const fields = {\n    username: 'username',\n    password: 'password',\n  };\n\n  const [formData, setFormData] = useState<FormStateType>({\n    [fields.username]: {\n      value: '',\n      validationMessage: null,\n    },\n    [fields.password]: {\n      value: '',\n      validationMessage: null,\n    },\n  });\n\n  const validation: { [key: string]: ValidationRuleType[] } = {\n    [fields.username]: [\n      { type: ValidatorNames.required },\n      { type: ValidatorNames.emailOrPhoneNumber },\n    ],\n    [fields.password]: [\n      { type: ValidatorNames.required },\n      {\n        type: ValidatorNames.minLength,\n        length: 8,\n      },\n    ],\n  };\n\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [submitBtnClicked, setSubmitBtnClicked] = useState(false);\n\n  useEffect(() => {\n    let valid = true;\n\n    for (const index in formData) {\n      if (formData[index].validationMessage) {\n        valid = false;\n        break;\n      }\n    }\n\n    if (formIsValid !== valid) {\n      setFormIsValid(valid);\n    }\n  }, [formData]);\n\n  useEffect(() => {\n    if (error?.detail) {\n      for (const key in error?.detail) {\n        enqueueSnackbar(error.detail[key], { variant: 'error' });\n      }\n    }\n  }, [error]);\n\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onFormDataChange = (fieldName: string) => (event: ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      ...formData,\n      [fieldName]: {\n        value: event.target.value,\n        validationMessage: validate(validation[fieldName], event.target.value),\n      },\n    });\n  };\n\n  const handleSubmit = (event: SyntheticEvent) => {\n    event.preventDefault();\n    let valid = true;\n\n    if (!submitBtnClicked) {\n      const newFormData = {};\n\n      for (const key in fields) {\n        const validRes = validate(validation[key], formData[key].value);\n\n        newFormData[key] = {\n          ...formData[key],\n          validationMessage: validRes,\n        };\n\n        if (validRes) {\n          valid = false;\n        }\n      }\n\n      setFormData(newFormData);\n\n      setSubmitBtnClicked(true);\n    }\n\n    if (formIsValid && valid) {\n      dispatch(loginRequest({\n        username: formData[fields.username].value,\n        password: formData[fields.password].value,\n      }));\n    }\n  };\n\n  const handleClickOnShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const getFieldProps = (fieldName: string) => {\n    const fieldProps: FormFieldType = {\n      onChange: onFormDataChange(fieldName),\n      value: formData[fieldName].value,\n      hasError: false,\n      helperText: null,\n    };\n\n    if (submitBtnClicked) {\n      fieldProps.hasError = !!formData[fieldName].validationMessage;\n      fieldProps.helperText = formData[fieldName].validationMessage;\n    }\n\n    return fieldProps;\n  };\n\n  const usernameProps = getFieldProps(fields.username);\n  const passwordProps = getFieldProps(fields.password);\n\n  return (\n    <>\n      <Helmet>\n        <title>Novakid - Sign in</title>\n      </Helmet>\n      <TopLoading loading={false} />\n      <div className={cx('loginPage')}>\n        <form\n          onSubmit={handleSubmit}\n          className={styles.form}\n          noValidate\n          autoComplete=\"off\"\n        >\n          <div className={cx('logo')}>\n            <Logo />\n          </div>\n          <TextField\n            label=\"Email or phone number\"\n            className={cx({ hasError: usernameProps.hasError })}\n            variant=\"outlined\"\n            type=\"email\"\n            size=\"small\"\n            required\n            {...usernameProps}\n          />\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            className={cx({ hasError: passwordProps.hasError })}\n            size=\"small\"\n            type={showPassword ? 'text' : 'password'}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleClickOnShowPassword}>\n                    {showPassword ? <FaEye /> : <FaEyeSlash />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            required\n            {...passwordProps}\n          />\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"medium\"\n            disabled={isPending}\n          >\n            {isPending ? <CircularProgress size={21} /> : 'Sign in'}\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"sourceRoot":""}