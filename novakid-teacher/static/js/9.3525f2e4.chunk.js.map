{"version":3,"sources":["components/SectionTitle/index.tsx","components/TopLoading/index.tsx","components/SectionTitle/styles.module.scss","pages/Program/Tree/Level/styles.module.scss","pages/Program/Tree/Unit/styles.module.scss","pages/Program/Tree/Lesson/styles.module.scss","pages/Program/Tree/styles.module.scss","pages/Program/styles.module.scss","store/program/selectors.ts","pages/Program/Tree/Level/index.tsx","pages/Program/Tree/Unit/index.tsx","pages/Program/Tree/Lesson/index.tsx","pages/Program/Tree/index.tsx","pages/Program/index.tsx"],"names":["cx","classnames","bind","styles","SectionTitle","props","title","loading","bold","hasLoading","className","contains","memo","TopLoading","ref","useRef","useEffect","current","continuousStart","complete","color","module","exports","getProgramLoading","state","program","levelLoading","unitLoading","lessonLoading","topLoading","getProgram","levels","units","lessons","Level","children","defaultOpen","useState","isOpen","setIsOpen","type","onClick","prevOpen","arrow__open","Unit","Boolean","Lesson","TreeList","map","level","index","id","length","number","name","unit","lesson","Program","dispatch","useDispatch","useSelector","programPending","Helmet","Container","Tree"],"mappings":"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","file":"static/js/9.3525f2e4.chunk.js","sourcesContent":["import React, { FC, memo } from 'react';\nimport classnames from 'classnames/bind';\nimport BounceLoading from 'components/BounceLoading';\n\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\ninterface PropsType {\n  title: string;\n  loading?: boolean;\n  bold?: boolean;\n}\n\nconst SectionTitle: FC<PropsType> = (props) => {\n  const {\n    title,\n    loading,\n    bold,\n  } = props;\n\n  const hasLoading = typeof loading !== 'undefined';\n\n  return (\n    <blockquote className={cx('sectionTitle', { bold })}>\n      <p className={cx('title')}>{title}</p>\n      {hasLoading && (\n        <div className={cx('loader')}>\n          <BounceLoading loading={!!loading} contains />\n        </div>\n      )}\n    </blockquote>\n  );\n};\n\nexport default memo(SectionTitle);\n","import React, {\n  useRef,\n  useEffect,\n  FC,\n  memo,\n} from 'react';\nimport LoadingBar from 'react-top-loading-bar';\n\ninterface LoadingBarProps {\n  continuousStart: () => void;\n  complete: () => void;\n}\n\ninterface PropsType {\n  loading: boolean;\n}\n\nconst TopLoading: FC<PropsType> = ({ loading }) => {\n  const ref = useRef<HTMLDivElement & LoadingBarProps | null>(null);\n\n  const handleContinuousStart = () => {\n    if (ref.current) ref.current.continuousStart();\n  };\n\n  const handleComplete = () => {\n    if (ref.current) ref.current.complete();\n  };\n\n  useEffect(() => {\n    if (loading) {\n      handleContinuousStart();\n    } else {\n      handleComplete();\n    }\n  }, [loading]);\n\n  return <LoadingBar color=\"#f6bb3d\" ref={ref} />;\n};\n\nexport default memo(TopLoading);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"SectionTitle_sectionTitle_1fqFx\",\"bold\":\"SectionTitle_bold_MpdaX\",\"title\":\"SectionTitle_title_1o40P\",\"loader\":\"SectionTitle_loader_3AES-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"level\":\"Level_level_1YtRK\",\"arrow\":\"Level_arrow_2i-NB\",\"arrow__open\":\"Level_arrow__open_1zhXe\",\"button\":\"Level_button_11vc7\",\"buttonText\":\"Level_buttonText_34S9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"unit\":\"Unit_unit_N_-XI\",\"button\":\"Unit_button_2uaqw\",\"buttonText\":\"Unit_buttonText_t1qKc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lesson\":\"Lesson_lesson_Qp4ay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"units\":\"Tree_units_2hwsJ\",\"lessons\":\"Tree_lessons_2Er2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"program\":\"Program_program_3tt0R\"};","import { AppStateType } from 'types';\nimport ProgramState from 'types/programType';\n\nexport const getProgramLoading = (state: AppStateType): boolean => (\n  state.program.levelLoading\n  || state.program.unitLoading\n  || state.program.lessonLoading\n  || state.program.topLoading\n);\n\nexport const getProgram = (state: AppStateType): Pick<ProgramState, 'levels' | 'units' | 'lessons'> => ({\n  levels: state.program.levels,\n  units: state.program.units,\n  lessons: state.program.lessons,\n});\n","import React, {\n  FC,\n  memo,\n  ReactNode,\n  useState,\n} from 'react';\nimport classnames from 'classnames/bind';\n\nimport { FaChevronRight } from 'react-icons/fa';\n\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport interface PropsType {\n  title: string;\n  children?: ReactNode;\n  defaultOpen: boolean;\n}\n\nconst Level: FC<PropsType> = ({ title, children, defaultOpen }) => {\n  const [isOpen, setIsOpen] = useState(defaultOpen);\n\n  const handleToggle = () => {\n    setIsOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <div className={cx('level')}>\n      <button className={cx('button')} type=\"button\" onClick={handleToggle}>\n        <FaChevronRight color=\"#4a4a4a\" className={cx('arrow', { arrow__open: isOpen })} />\n        <span className={cx('buttonText')}>{title}</span>\n      </button>\n      {isOpen ? children : null}\n    </div>\n  );\n};\n\nexport default memo(Level);\n","import React, {\n  FC,\n  memo,\n  ReactNode,\n  useState,\n} from 'react';\nimport classnames from 'classnames/bind';\n\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport interface PropsType {\n  title: string;\n  children?: ReactNode;\n  defaultOpen?: boolean;\n}\n\nconst Unit: FC<PropsType> = ({ title, children, defaultOpen }) => {\n  const [isOpen, setIsOpen] = useState(Boolean(defaultOpen));\n\n  const handleToggle = () => {\n    setIsOpen((prevOpen) => !prevOpen);\n  };\n\n  return (\n    <div className={cx('unit')}>\n      <button className={cx('button')} type=\"button\" onClick={handleToggle}>\n        <span className={cx('buttonText')}>{title}</span>\n      </button>\n      {isOpen ? children : null}\n    </div>\n  );\n};\n\nexport default memo(Unit);\n","import React, {\n  FC,\n  memo,\n} from 'react';\nimport classnames from 'classnames/bind';\n\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport interface PropsType {\n  title: string;\n}\n\nconst Lesson: FC<PropsType> = ({ title }) => {\n  return (\n    <div className={cx('lesson')}>\n      {title}\n    </div>\n  );\n};\n\nexport default memo(Lesson);\n","import React, { FC, memo } from 'react';\nimport classnames from 'classnames/bind';\n\nimport { ProgramLevelType, ProgramUnitType, ProgramLessonType } from 'types/programType';\n\nimport Level from './Level';\nimport Unit from './Unit';\nimport Lesson from './Lesson';\n\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\nexport interface PropsType {\n  levels: ProgramLevelType[];\n  units: ProgramUnitType;\n  lessons: ProgramLessonType;\n}\n\nconst TreeList: FC<PropsType> = ({ levels, units, lessons }) => {\n  return (\n    <div className={cx('tree')}>\n      {levels.map((level, index) => (\n        units[level.id]?.length ? (\n          <Level\n            key={level.id}\n            title={`Level ${level.number} - ${level.name}`}\n            defaultOpen={index === 0}\n          >\n            <div className={cx('units')}>\n              {units[level.id]?.map((unit) => (\n                lessons[unit.id]?.length\n                  ? (\n                    <Unit title={unit.name} key={unit.id}>\n                      <div className={cx('lessons')}>\n                        {lessons[unit.id]?.map((lesson) => (\n                          <Lesson key={lesson.id} title={lesson.name} />\n                        ))}\n                      </div>\n                    </Unit>\n                  ) : null\n              ))}\n            </div>\n          </Level>\n        ) : null\n      ))}\n    </div>\n  );\n};\n\nexport default memo(TreeList);\n","import React, { FC, useEffect } from 'react';\nimport classnames from 'classnames/bind';\nimport { Helmet } from 'react-helmet';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { programPending } from 'store/program/actions';\nimport { getProgram, getProgramLoading } from 'store/program/selectors';\n\nimport TopLoading from 'components/TopLoading';\nimport Container from 'components/Container';\nimport SectionTitle from 'components/SectionTitle';\n\nimport TreeList from './Tree';\n\nimport styles from './styles.module.scss';\n\nconst cx = classnames.bind(styles);\n\nconst Program: FC = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(getProgram);\n  const loading = useSelector(getProgramLoading);\n\n  useEffect(() => {\n    dispatch(programPending());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Novakid - Program</title>\n      </Helmet>\n      <TopLoading loading={loading} />\n      <div className={cx('program')}>\n        <Container>\n          <SectionTitle title=\"Program\" bold loading={loading} />\n          <TreeList {...state} />\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Program;\n"],"sourceRoot":""}